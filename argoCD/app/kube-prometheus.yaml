apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: kube-prometheus
  namespace: argo
spec:
  project: default
  source:
    repoURL: https://okestrolab@bitbucket.org/okestrolab/cmp-helm.git
    targetRevision: develop
    path: mdware-helm/charts/kube-prometheus
    # helm specific config
    #chart: redis  # Set this when pulling directly from a Helm repo. DO NOT set for git-hosted Helm charts.
    helm:
      passCredentials: false # If true then adds --pass-credentials to Helm commands to pass credentials to all domains
      # Extra parameters to set (same as setting through values.yaml, but these take precedence)
      parameters:
      - name: prometheus.service.nodePorts.http
        value: '30007'
      - name: prometheus.service.type
        value: NodePort
      - name: global.storageClass
        value: cmp
      - name: prometheus.additionalScrapeConfigs.enabled
        value: 'true'
      - name: prometheus.additionalScrapeConfigs.type
        value: internal
      - name: 'prometheus.additionalScrapeConfigs.internal.jobList[0].job_name'
        value: kube-middleware-redis-exporter
      - name: >-
          prometheus.additionalScrapeConfigs.internal.jobList[0].static_configs[0].targets[0]
        value: 'portal-redis-cluster-metrics.redis.svc:9121'
      - name: 'prometheus.additionalScrapeConfigs.internal.jobList[1].job_name'
        value: kube-middleware-rabbitmq-exporter
      - name: >-
          prometheus.additionalScrapeConfigs.internal.jobList[1].static_configs[0].targets[0]
        value: 'portal-rabbitmq.rabbitmq.svc:9419'
      - name: 'prometheus.additionalScrapeConfigs.internal.jobList[2].job_name'
        value: kube-middleware-keycloak-exporter
      - name: >-
          prometheus.additionalScrapeConfigs.internal.jobList[2].static_configs[0].targets[0]
        value: 'portal-keycloak-metrics.keycloak.svc:8080'
      - name: 'prometheus.additionalScrapeConfigs.internal.jobList[3].job_name'
        value: openstack-node-exporter
      - name: >-
          prometheus.additionalScrapeConfigs.internal.jobList[3].static_configs[0].targets[0]
        value: '100.0.0.245:9100'
      - name: 'prometheus.additionalScrapeConfigs.internal.jobList[4].job_name'
        value: openstack-exporter
      - name: 'prometheus.additionalScrapeConfigs.internal.jobList[4].scrape_timeout'
        value: 30s
      - name: >-
          prometheus.additionalScrapeConfigs.internal.jobList[4].static_configs[0].targets[0]
        value: '100.0.0.245:9180'
      - name: 'prometheus.additionalScrapeConfigs.internal.jobList[5].job_name'
        value: openstack-libvirt-exporter
      - name: >-
          prometheus.additionalScrapeConfigs.internal.jobList[5].static_configs[0].targets[0]
        value: '100.0.0.245:9177'
      - name: 'prometheus.additionalScrapeConfigs.internal.jobList[6].job_name'
        value: kube-middleware-grafana-exporter
      - name: >-
          prometheus.additionalScrapeConfigs.internal.jobList[6].static_configs[0].targets[0]
        value: 'portal-grafana.grafana.svc:3000'
      # # Use the contents of files as parameters (uses Helm's --set-file)
      # fileParameters:
      # - name: config
      #   path: files/config.json

      # Release name override (defaults to application name)
      releaseName: portal

      # Helm values files for overriding values in the helm chart
      # The path is relative to the spec.source.path directory defined above
      valueFiles:
      - values.yaml
        #- values-prod.yaml

      # # Values file as block file
      # values: |
      #   ingress:
      #     enabled: true
      #     path: /
      #     hosts:
      #       - mydomain.example.com
      #     annotations:
      #       kubernetes.io/ingress.class: nginx
      #       kubernetes.io/tls-acme: "true"
      #     labels: {}
      #     tls:
      #       - secretName: mydomain-tls
      #         hosts:
      #           - mydomain.example.com

      # Optional Helm version to template with. If omitted it will fall back to look at the 'apiVersion' in Chart.yaml
      # and decide which Helm binary to use automatically. This field can be either 'v2' or 'v3'.
      version: v3

  destination:
    server: https://kubernetes.default.svc
    namespace: kube-prometheus
  syncPolicy:
    syncOptions:
    - ServerSideApply=true
  info:
  - name: additional jobList 경로
    value: prometheus.additionalScrapeConfigs.internal.jobList
  - name: 'additional jobList[0]'
    value: (kube) Redis Exporter
  - name: 'additional jobList[1]'
    value: (kube) RabbitMQ Exporter
  - name: 'additional jobList[2]'
    value: (kube) Keycloak Exporter
  - name: 'additional jobList[3]'
    value: Openstack Node Exporter
  - name: 'additional jobList[4]'
    value: Openstack Exporter
  - name: 'additional jobList[5]'
    value: Openstack Libvirt Exporter
  - name: 'additional jobList[6]'
    value: Grafana Exporter